//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.2.0
//     from Assets/New Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @NewControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @NewControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""New Controls"",
    ""maps"": [
        {
            ""name"": ""JustinController"",
            ""id"": ""8e7a0f27-9199-4a35-b75a-1c6a5a85777e"",
            ""actions"": [
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""a9f069e6-03f7-4b51-95b8-e82d9b7964f7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SkipDialog"",
                    ""type"": ""Button"",
                    ""id"": ""0e8a2aa8-a21d-41fd-9854-1eb1a7291f19"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TimeTravel"",
                    ""type"": ""Button"",
                    ""id"": ""abcaadaf-5708-4149-90d5-cc58a4244800"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""0e5c7bf1-bb90-4935-80c2-6539545b0eca"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""891b8b16-c518-422c-b464-d1a042bfaaba"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InputSpeed"",
                    ""type"": ""Value"",
                    ""id"": ""cccb962b-6502-4afc-adc1-984915e32c5e"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Grab"",
                    ""type"": ""Button"",
                    ""id"": ""0e30fa49-5a6d-4eb1-a700-34ab6be2a9aa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenInventory"",
                    ""type"": ""Button"",
                    ""id"": ""34368654-3c60-456e-aee4-8e636a629f9c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenTimeCapsule"",
                    ""type"": ""Button"",
                    ""id"": ""1997582a-9d61-4037-bbfd-e79a5302595e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ScrollInvRx"",
                    ""type"": ""Button"",
                    ""id"": ""aa68d0e4-2082-4b4e-9130-7f1a1a7bd562"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ScrollInvSx"",
                    ""type"": ""Button"",
                    ""id"": ""6ca08d7d-6d4f-4cca-ad65-87555eb5b24e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EscInv"",
                    ""type"": ""Button"",
                    ""id"": ""110ea5c7-300a-417c-9898-6e1f83fbf931"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectInv"",
                    ""type"": ""Button"",
                    ""id"": ""fdb3da0e-0991-44c0-9f61-bb387271946e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MenuOpen"",
                    ""type"": ""Button"",
                    ""id"": ""c59ff75d-c0b1-49a4-9f6f-74a6e4ddf4dc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""386ce9d2-b77a-47dd-bfb4-902acef7d57b"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""819f004f-683d-4eb9-9ca9-e2b7651974d8"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SkipDialog"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""91104dbd-5f3f-4d78-a491-fa3f830e8ca3"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TimeTravel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""555a7781-de84-4e13-a42d-961e5ed3f7eb"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ba13e3cf-1980-42d8-bea3-66a0bd149410"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3d57d858-6d3d-47f5-a585-922b2844b75b"",
                    ""path"": ""<Gamepad>/leftStick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InputSpeed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9fb60d46-5be2-48d0-b66d-dfbb32099218"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Grab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ecbdc07d-7ba9-470e-a26f-1668c625d959"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e492d17f-f035-4bc8-bf04-48e433dc2866"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenTimeCapsule"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dd388fbc-7948-4c21-b6f1-7793c9165e7f"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ScrollInvRx"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f13a73b4-1bea-475f-989d-301191b0d9f0"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ScrollInvSx"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""44b0660a-9a85-4e8c-82bd-f1da58af0644"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EscInv"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2451cc10-4940-4dbc-8869-2deabd838ce3"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectInv"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9f1f03a0-aa33-43fe-9bab-d5dbcb6a333d"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MenuOpen"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""MenuController"",
            ""id"": ""722119c8-f638-48cd-bc6f-732e54344894"",
            ""actions"": [
                {
                    ""name"": ""ScrollRx"",
                    ""type"": ""Button"",
                    ""id"": ""2394bd70-5e38-425c-8cf6-407f5801ab8f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ScrollSx"",
                    ""type"": ""Button"",
                    ""id"": ""3c2aaa0c-fca4-42ca-a535-1962c31cfa6e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Back"",
                    ""type"": ""Button"",
                    ""id"": ""69d41f75-680d-4d5d-9ef2-0a9650410a0e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""be9fbe73-73fb-4ac8-bfb0-55ea7d8b0272"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""a97ebdd7-6a67-44e6-8a7c-5b616f3b0750"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ScrollRx"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6e7ab5fa-19d5-45d4-bcc4-b817eb4efd52"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ScrollSx"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f18dcf4c-870b-4b77-a4fb-3d805f8670ee"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fbfff988-92aa-406d-8562-d9677d687b59"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // JustinController
        m_JustinController = asset.FindActionMap("JustinController", throwIfNotFound: true);
        m_JustinController_Jump = m_JustinController.FindAction("Jump", throwIfNotFound: true);
        m_JustinController_SkipDialog = m_JustinController.FindAction("SkipDialog", throwIfNotFound: true);
        m_JustinController_TimeTravel = m_JustinController.FindAction("TimeTravel", throwIfNotFound: true);
        m_JustinController_Shoot = m_JustinController.FindAction("Shoot", throwIfNotFound: true);
        m_JustinController_Dash = m_JustinController.FindAction("Dash", throwIfNotFound: true);
        m_JustinController_InputSpeed = m_JustinController.FindAction("InputSpeed", throwIfNotFound: true);
        m_JustinController_Grab = m_JustinController.FindAction("Grab", throwIfNotFound: true);
        m_JustinController_OpenInventory = m_JustinController.FindAction("OpenInventory", throwIfNotFound: true);
        m_JustinController_OpenTimeCapsule = m_JustinController.FindAction("OpenTimeCapsule", throwIfNotFound: true);
        m_JustinController_ScrollInvRx = m_JustinController.FindAction("ScrollInvRx", throwIfNotFound: true);
        m_JustinController_ScrollInvSx = m_JustinController.FindAction("ScrollInvSx", throwIfNotFound: true);
        m_JustinController_EscInv = m_JustinController.FindAction("EscInv", throwIfNotFound: true);
        m_JustinController_SelectInv = m_JustinController.FindAction("SelectInv", throwIfNotFound: true);
        m_JustinController_MenuOpen = m_JustinController.FindAction("MenuOpen", throwIfNotFound: true);
        // MenuController
        m_MenuController = asset.FindActionMap("MenuController", throwIfNotFound: true);
        m_MenuController_ScrollRx = m_MenuController.FindAction("ScrollRx", throwIfNotFound: true);
        m_MenuController_ScrollSx = m_MenuController.FindAction("ScrollSx", throwIfNotFound: true);
        m_MenuController_Back = m_MenuController.FindAction("Back", throwIfNotFound: true);
        m_MenuController_Select = m_MenuController.FindAction("Select", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // JustinController
    private readonly InputActionMap m_JustinController;
    private IJustinControllerActions m_JustinControllerActionsCallbackInterface;
    private readonly InputAction m_JustinController_Jump;
    private readonly InputAction m_JustinController_SkipDialog;
    private readonly InputAction m_JustinController_TimeTravel;
    private readonly InputAction m_JustinController_Shoot;
    private readonly InputAction m_JustinController_Dash;
    private readonly InputAction m_JustinController_InputSpeed;
    private readonly InputAction m_JustinController_Grab;
    private readonly InputAction m_JustinController_OpenInventory;
    private readonly InputAction m_JustinController_OpenTimeCapsule;
    private readonly InputAction m_JustinController_ScrollInvRx;
    private readonly InputAction m_JustinController_ScrollInvSx;
    private readonly InputAction m_JustinController_EscInv;
    private readonly InputAction m_JustinController_SelectInv;
    private readonly InputAction m_JustinController_MenuOpen;
    public struct JustinControllerActions
    {
        private @NewControls m_Wrapper;
        public JustinControllerActions(@NewControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Jump => m_Wrapper.m_JustinController_Jump;
        public InputAction @SkipDialog => m_Wrapper.m_JustinController_SkipDialog;
        public InputAction @TimeTravel => m_Wrapper.m_JustinController_TimeTravel;
        public InputAction @Shoot => m_Wrapper.m_JustinController_Shoot;
        public InputAction @Dash => m_Wrapper.m_JustinController_Dash;
        public InputAction @InputSpeed => m_Wrapper.m_JustinController_InputSpeed;
        public InputAction @Grab => m_Wrapper.m_JustinController_Grab;
        public InputAction @OpenInventory => m_Wrapper.m_JustinController_OpenInventory;
        public InputAction @OpenTimeCapsule => m_Wrapper.m_JustinController_OpenTimeCapsule;
        public InputAction @ScrollInvRx => m_Wrapper.m_JustinController_ScrollInvRx;
        public InputAction @ScrollInvSx => m_Wrapper.m_JustinController_ScrollInvSx;
        public InputAction @EscInv => m_Wrapper.m_JustinController_EscInv;
        public InputAction @SelectInv => m_Wrapper.m_JustinController_SelectInv;
        public InputAction @MenuOpen => m_Wrapper.m_JustinController_MenuOpen;
        public InputActionMap Get() { return m_Wrapper.m_JustinController; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(JustinControllerActions set) { return set.Get(); }
        public void SetCallbacks(IJustinControllerActions instance)
        {
            if (m_Wrapper.m_JustinControllerActionsCallbackInterface != null)
            {
                @Jump.started -= m_Wrapper.m_JustinControllerActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_JustinControllerActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_JustinControllerActionsCallbackInterface.OnJump;
                @SkipDialog.started -= m_Wrapper.m_JustinControllerActionsCallbackInterface.OnSkipDialog;
                @SkipDialog.performed -= m_Wrapper.m_JustinControllerActionsCallbackInterface.OnSkipDialog;
                @SkipDialog.canceled -= m_Wrapper.m_JustinControllerActionsCallbackInterface.OnSkipDialog;
                @TimeTravel.started -= m_Wrapper.m_JustinControllerActionsCallbackInterface.OnTimeTravel;
                @TimeTravel.performed -= m_Wrapper.m_JustinControllerActionsCallbackInterface.OnTimeTravel;
                @TimeTravel.canceled -= m_Wrapper.m_JustinControllerActionsCallbackInterface.OnTimeTravel;
                @Shoot.started -= m_Wrapper.m_JustinControllerActionsCallbackInterface.OnShoot;
                @Shoot.performed -= m_Wrapper.m_JustinControllerActionsCallbackInterface.OnShoot;
                @Shoot.canceled -= m_Wrapper.m_JustinControllerActionsCallbackInterface.OnShoot;
                @Dash.started -= m_Wrapper.m_JustinControllerActionsCallbackInterface.OnDash;
                @Dash.performed -= m_Wrapper.m_JustinControllerActionsCallbackInterface.OnDash;
                @Dash.canceled -= m_Wrapper.m_JustinControllerActionsCallbackInterface.OnDash;
                @InputSpeed.started -= m_Wrapper.m_JustinControllerActionsCallbackInterface.OnInputSpeed;
                @InputSpeed.performed -= m_Wrapper.m_JustinControllerActionsCallbackInterface.OnInputSpeed;
                @InputSpeed.canceled -= m_Wrapper.m_JustinControllerActionsCallbackInterface.OnInputSpeed;
                @Grab.started -= m_Wrapper.m_JustinControllerActionsCallbackInterface.OnGrab;
                @Grab.performed -= m_Wrapper.m_JustinControllerActionsCallbackInterface.OnGrab;
                @Grab.canceled -= m_Wrapper.m_JustinControllerActionsCallbackInterface.OnGrab;
                @OpenInventory.started -= m_Wrapper.m_JustinControllerActionsCallbackInterface.OnOpenInventory;
                @OpenInventory.performed -= m_Wrapper.m_JustinControllerActionsCallbackInterface.OnOpenInventory;
                @OpenInventory.canceled -= m_Wrapper.m_JustinControllerActionsCallbackInterface.OnOpenInventory;
                @OpenTimeCapsule.started -= m_Wrapper.m_JustinControllerActionsCallbackInterface.OnOpenTimeCapsule;
                @OpenTimeCapsule.performed -= m_Wrapper.m_JustinControllerActionsCallbackInterface.OnOpenTimeCapsule;
                @OpenTimeCapsule.canceled -= m_Wrapper.m_JustinControllerActionsCallbackInterface.OnOpenTimeCapsule;
                @ScrollInvRx.started -= m_Wrapper.m_JustinControllerActionsCallbackInterface.OnScrollInvRx;
                @ScrollInvRx.performed -= m_Wrapper.m_JustinControllerActionsCallbackInterface.OnScrollInvRx;
                @ScrollInvRx.canceled -= m_Wrapper.m_JustinControllerActionsCallbackInterface.OnScrollInvRx;
                @ScrollInvSx.started -= m_Wrapper.m_JustinControllerActionsCallbackInterface.OnScrollInvSx;
                @ScrollInvSx.performed -= m_Wrapper.m_JustinControllerActionsCallbackInterface.OnScrollInvSx;
                @ScrollInvSx.canceled -= m_Wrapper.m_JustinControllerActionsCallbackInterface.OnScrollInvSx;
                @EscInv.started -= m_Wrapper.m_JustinControllerActionsCallbackInterface.OnEscInv;
                @EscInv.performed -= m_Wrapper.m_JustinControllerActionsCallbackInterface.OnEscInv;
                @EscInv.canceled -= m_Wrapper.m_JustinControllerActionsCallbackInterface.OnEscInv;
                @SelectInv.started -= m_Wrapper.m_JustinControllerActionsCallbackInterface.OnSelectInv;
                @SelectInv.performed -= m_Wrapper.m_JustinControllerActionsCallbackInterface.OnSelectInv;
                @SelectInv.canceled -= m_Wrapper.m_JustinControllerActionsCallbackInterface.OnSelectInv;
                @MenuOpen.started -= m_Wrapper.m_JustinControllerActionsCallbackInterface.OnMenuOpen;
                @MenuOpen.performed -= m_Wrapper.m_JustinControllerActionsCallbackInterface.OnMenuOpen;
                @MenuOpen.canceled -= m_Wrapper.m_JustinControllerActionsCallbackInterface.OnMenuOpen;
            }
            m_Wrapper.m_JustinControllerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @SkipDialog.started += instance.OnSkipDialog;
                @SkipDialog.performed += instance.OnSkipDialog;
                @SkipDialog.canceled += instance.OnSkipDialog;
                @TimeTravel.started += instance.OnTimeTravel;
                @TimeTravel.performed += instance.OnTimeTravel;
                @TimeTravel.canceled += instance.OnTimeTravel;
                @Shoot.started += instance.OnShoot;
                @Shoot.performed += instance.OnShoot;
                @Shoot.canceled += instance.OnShoot;
                @Dash.started += instance.OnDash;
                @Dash.performed += instance.OnDash;
                @Dash.canceled += instance.OnDash;
                @InputSpeed.started += instance.OnInputSpeed;
                @InputSpeed.performed += instance.OnInputSpeed;
                @InputSpeed.canceled += instance.OnInputSpeed;
                @Grab.started += instance.OnGrab;
                @Grab.performed += instance.OnGrab;
                @Grab.canceled += instance.OnGrab;
                @OpenInventory.started += instance.OnOpenInventory;
                @OpenInventory.performed += instance.OnOpenInventory;
                @OpenInventory.canceled += instance.OnOpenInventory;
                @OpenTimeCapsule.started += instance.OnOpenTimeCapsule;
                @OpenTimeCapsule.performed += instance.OnOpenTimeCapsule;
                @OpenTimeCapsule.canceled += instance.OnOpenTimeCapsule;
                @ScrollInvRx.started += instance.OnScrollInvRx;
                @ScrollInvRx.performed += instance.OnScrollInvRx;
                @ScrollInvRx.canceled += instance.OnScrollInvRx;
                @ScrollInvSx.started += instance.OnScrollInvSx;
                @ScrollInvSx.performed += instance.OnScrollInvSx;
                @ScrollInvSx.canceled += instance.OnScrollInvSx;
                @EscInv.started += instance.OnEscInv;
                @EscInv.performed += instance.OnEscInv;
                @EscInv.canceled += instance.OnEscInv;
                @SelectInv.started += instance.OnSelectInv;
                @SelectInv.performed += instance.OnSelectInv;
                @SelectInv.canceled += instance.OnSelectInv;
                @MenuOpen.started += instance.OnMenuOpen;
                @MenuOpen.performed += instance.OnMenuOpen;
                @MenuOpen.canceled += instance.OnMenuOpen;
            }
        }
    }
    public JustinControllerActions @JustinController => new JustinControllerActions(this);

    // MenuController
    private readonly InputActionMap m_MenuController;
    private IMenuControllerActions m_MenuControllerActionsCallbackInterface;
    private readonly InputAction m_MenuController_ScrollRx;
    private readonly InputAction m_MenuController_ScrollSx;
    private readonly InputAction m_MenuController_Back;
    private readonly InputAction m_MenuController_Select;
    public struct MenuControllerActions
    {
        private @NewControls m_Wrapper;
        public MenuControllerActions(@NewControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @ScrollRx => m_Wrapper.m_MenuController_ScrollRx;
        public InputAction @ScrollSx => m_Wrapper.m_MenuController_ScrollSx;
        public InputAction @Back => m_Wrapper.m_MenuController_Back;
        public InputAction @Select => m_Wrapper.m_MenuController_Select;
        public InputActionMap Get() { return m_Wrapper.m_MenuController; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MenuControllerActions set) { return set.Get(); }
        public void SetCallbacks(IMenuControllerActions instance)
        {
            if (m_Wrapper.m_MenuControllerActionsCallbackInterface != null)
            {
                @ScrollRx.started -= m_Wrapper.m_MenuControllerActionsCallbackInterface.OnScrollRx;
                @ScrollRx.performed -= m_Wrapper.m_MenuControllerActionsCallbackInterface.OnScrollRx;
                @ScrollRx.canceled -= m_Wrapper.m_MenuControllerActionsCallbackInterface.OnScrollRx;
                @ScrollSx.started -= m_Wrapper.m_MenuControllerActionsCallbackInterface.OnScrollSx;
                @ScrollSx.performed -= m_Wrapper.m_MenuControllerActionsCallbackInterface.OnScrollSx;
                @ScrollSx.canceled -= m_Wrapper.m_MenuControllerActionsCallbackInterface.OnScrollSx;
                @Back.started -= m_Wrapper.m_MenuControllerActionsCallbackInterface.OnBack;
                @Back.performed -= m_Wrapper.m_MenuControllerActionsCallbackInterface.OnBack;
                @Back.canceled -= m_Wrapper.m_MenuControllerActionsCallbackInterface.OnBack;
                @Select.started -= m_Wrapper.m_MenuControllerActionsCallbackInterface.OnSelect;
                @Select.performed -= m_Wrapper.m_MenuControllerActionsCallbackInterface.OnSelect;
                @Select.canceled -= m_Wrapper.m_MenuControllerActionsCallbackInterface.OnSelect;
            }
            m_Wrapper.m_MenuControllerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @ScrollRx.started += instance.OnScrollRx;
                @ScrollRx.performed += instance.OnScrollRx;
                @ScrollRx.canceled += instance.OnScrollRx;
                @ScrollSx.started += instance.OnScrollSx;
                @ScrollSx.performed += instance.OnScrollSx;
                @ScrollSx.canceled += instance.OnScrollSx;
                @Back.started += instance.OnBack;
                @Back.performed += instance.OnBack;
                @Back.canceled += instance.OnBack;
                @Select.started += instance.OnSelect;
                @Select.performed += instance.OnSelect;
                @Select.canceled += instance.OnSelect;
            }
        }
    }
    public MenuControllerActions @MenuController => new MenuControllerActions(this);
    public interface IJustinControllerActions
    {
        void OnJump(InputAction.CallbackContext context);
        void OnSkipDialog(InputAction.CallbackContext context);
        void OnTimeTravel(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnInputSpeed(InputAction.CallbackContext context);
        void OnGrab(InputAction.CallbackContext context);
        void OnOpenInventory(InputAction.CallbackContext context);
        void OnOpenTimeCapsule(InputAction.CallbackContext context);
        void OnScrollInvRx(InputAction.CallbackContext context);
        void OnScrollInvSx(InputAction.CallbackContext context);
        void OnEscInv(InputAction.CallbackContext context);
        void OnSelectInv(InputAction.CallbackContext context);
        void OnMenuOpen(InputAction.CallbackContext context);
    }
    public interface IMenuControllerActions
    {
        void OnScrollRx(InputAction.CallbackContext context);
        void OnScrollSx(InputAction.CallbackContext context);
        void OnBack(InputAction.CallbackContext context);
        void OnSelect(InputAction.CallbackContext context);
    }
}
